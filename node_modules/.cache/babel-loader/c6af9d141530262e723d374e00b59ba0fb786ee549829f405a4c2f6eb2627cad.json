{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPc\\\\Desktop\\\\Portfolio new\\\\portfolio\\\\src\\\\Components\\\\contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { NotificationManager } from \"react-notifications\";\nimport \"./contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: name === \"name\" ? value.toLowerCase().replace(/\\b\\w/g, char => char.toUpperCase()) : name === \"email\" ? value.toLowerCase() : name === \"message\" ? value.toLowerCase().replace(/(^\\s*\\w|[.!?]\\s*\\w)/g, char => char.toUpperCase()) : value\n    });\n  };\n  const validate = () => {\n    let isValid = true;\n    if (!formData.name.trim()) {\n      toast.error(\"Name is required\", {\n        pauseOnHover: false\n      });\n      isValid = false;\n    } else if (formData.name.trim().length < 3) {\n      toast.error(\"Name must be at least 3 characters long\", {\n        pauseOnHover: false\n      });\n      isValid = false;\n    }\n    const phoneRegex = /^[6-9]\\d{9}$/;\n    if (!formData.phone.trim()) {\n      toast.error(\"Phone number is required\", {\n        pauseOnHover: false\n      });\n      isValid = false;\n    } else if (!phoneRegex.test(formData.phone)) {\n      toast.error(\"Invalid phone number\", {\n        pauseOnHover: false\n      });\n      isValid = false;\n    }\n    if (!formData.email.trim()) {\n      toast.error(\"Email address is required\", {\n        pauseOnHover: false\n      });\n      isValid = false;\n    } else if (!formData.email.includes(\"@\") || !formData.email.match(/^[a-zA-Z0-9.-_]+@[a-zA-Z0-9]+(\\.[a-zA-Z]{2,})?$/)) {\n      toast.error(\"Invalid email address\", {\n        pauseOnHover: false\n      });\n      isValid = false;\n    }\n    if (!formData.message.trim()) {\n      toast.error(\"Message cannot be empty\", {\n        pauseOnHover: false\n      });\n      isValid = false;\n    } else if (formData.message.length > 200) {\n      toast.error(\"Message cannot be more than 200 characters long\", {\n        pauseOnHover: false\n      });\n    } else {\n      const messageRegex = /^[a-zA-Z0-9.,'\"!&\\s@%#%^*(){}?+-/]*$/;\n      if (!messageRegex.test(formData.message)) {\n        toast.error(\"Message can only contain alphabets, numbers, and some special symbols\", {\n          pauseOnHover: false\n        });\n        isValid = false;\n      }\n    }\n    return isValid;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      toast.success(\"Your message has been sent successfully!\", {\n        pauseOnHover: false\n      });\n      console.log(\"Form Data:\", formData);\n      setFormData({\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        message: \"\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    id: \"Contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          placeholder: \"\",\n          pattern: \"[A-Za-z\\\\s]*\",\n          onInput: e => {\n            e.target.value = e.target.value.replace(/[^A-Za-z\\s]/g, \"\");\n          },\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          value: formData.phone,\n          onChange: handleChange,\n          placeholder: \" \",\n          maxLength: \"10\",\n          pattern: \"[0-9]*\",\n          onInput: e => e.target.value = e.target.value.replace(/\\D/g, \"\"),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \" \",\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"message\",\n          value: formData.message,\n          onChange: handleChange,\n          placeholder: \" \",\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"d2VvX0tOJ6mSvr59M2LdSWbbHAg=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","NotificationManager","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","name","phone","email","message","handleChange","e","value","target","toLowerCase","replace","char","toUpperCase","validate","isValid","trim","toast","error","pauseOnHover","length","phoneRegex","test","includes","match","messageRegex","handleSubmit","preventDefault","success","console","log","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","pattern","onInput","style","width","maxLength","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/MyPc/Desktop/Portfolio new/portfolio/src/Components/contact.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport \"./contact.css\"\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: name === \"name\"\r\n        ? value\r\n          .toLowerCase()\r\n          .replace(/\\b\\w/g, (char) => char.toUpperCase())\r\n        : name === \"email\"\r\n          ? value\r\n            .toLowerCase()\r\n          : name === \"message\"\r\n            ? value\r\n              .toLowerCase()\r\n              .replace(/(^\\s*\\w|[.!?]\\s*\\w)/g, (char) => char.toUpperCase())\r\n            : value\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n\r\n    if (!formData.name.trim()) {\r\n      toast.error(\"Name is required\", {\r\n        pauseOnHover: false,\r\n      });\r\n      isValid = false;\r\n    } else if (formData.name.trim().length < 3) {\r\n      toast.error(\"Name must be at least 3 characters long\", {\r\n        pauseOnHover: false,\r\n      });\r\n      isValid = false;\r\n    }\r\n\r\n    const phoneRegex = /^[6-9]\\d{9}$/;\r\n    if (!formData.phone.trim()) {\r\n      toast.error(\"Phone number is required\", { pauseOnHover: false });\r\n      isValid = false;\r\n    } else if (!phoneRegex.test(formData.phone)) {\r\n      toast.error(\"Invalid phone number\", { pauseOnHover: false });\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      toast.error(\"Email address is required\", { pauseOnHover: false });\r\n      isValid = false;\r\n    } else if (\r\n      !formData.email.includes(\"@\") ||\r\n      !formData.email.match(/^[a-zA-Z0-9.-_]+@[a-zA-Z0-9]+(\\.[a-zA-Z]{2,})?$/)\r\n    ) {\r\n      toast.error(\"Invalid email address\", { pauseOnHover: false });\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.message.trim()) {\r\n      toast.error(\"Message cannot be empty\", { pauseOnHover: false });\r\n      isValid = false;\r\n    } else if (formData.message.length > 200) {\r\n      toast.error(\"Message cannot be more than 200 characters long\", { pauseOnHover: false })\r\n    }\r\n    else {\r\n      const messageRegex = /^[a-zA-Z0-9.,'\"!&\\s@%#%^*(){}?+-/]*$/;\r\n      if (!messageRegex.test(formData.message)) {\r\n        toast.error(\r\n          \"Message can only contain alphabets, numbers, and some special symbols\",\r\n          { pauseOnHover: false }\r\n        );\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      toast.success(\"Your message has been sent successfully!\", { pauseOnHover: false });\r\n      console.log(\"Form Data:\", formData);\r\n      setFormData({\r\n        name: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        message: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact\" id=\"Contact\">\r\n      <h2 >Contact me</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} placeholder=\"\" pattern=\"[A-Za-z\\s]*\" onInput={(e) => { e.target.value = e.target.value.replace(/[^A-Za-z\\s]/g, \"\"); }} style={{ width: \"100%\" }} />\r\n          <label>Name</label>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input type=\"text\" name=\"phone\" value={formData.phone} onChange={handleChange} placeholder=\" \" maxLength=\"10\" pattern=\"[0-9]*\" onInput={(e) => e.target.value = e.target.value.replace(/\\D/g, \"\")} style={{ width: \"100%\" }} />\r\n          <label>Phone Number</label>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input type=\"text\" name=\"email\" value={formData.email} onChange={handleChange} placeholder=\" \" style={{ width: \"100%\" }} />\r\n          <label>Email Address</label>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <textarea type=\"text\" name=\"message\" value={formData.message} onChange={handleChange} placeholder=\" \" style={{ width: \"100%\" }} />\r\n          <label>Your Message</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit\" style={{ marginTop: \"10px\" }}>Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}