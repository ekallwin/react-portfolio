{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPc\\\\Desktop\\\\Portfolio new\\\\portfolio\\\\src\\\\Components\\\\contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { NotificationManager } from \"react-notifications\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: name === \"name\" ? value.toLowerCase().replace(/\\b\\w/g, char => char.toUpperCase()) : name === \"email\" ? value.toLowerCase() : name === \"message\" ? value.toLowerCase().replace(/(^\\s*\\w|[.!?]\\s*\\w)/g, char => char.toUpperCase()) : value\n    });\n  };\n  const validate = () => {\n    let isValid = true;\n    if (!formData.name.trim()) {\n      NotificationManager.error(\"Name is required\", null, 4000);\n      isValid = false;\n    } else if (formData.name.trim().length < 3) {\n      NotificationManager.error(\"Name must be at least 3 characters long\", null, 4000);\n      isValid = false;\n    }\n    const phoneRegex = /^(?!(\\d)\\1{9})[6-9]\\d{9}$/;\n    if (!formData.phone.trim()) {\n      NotificationManager.error(\"Phone number is required\", null, 4000);\n      isValid = false;\n    } else if (!phoneRegex.test(formData.phone)) {\n      NotificationManager.error(\"Invalid phone number\", null, 4000);\n      isValid = false;\n    }\n    if (!formData.email.trim()) {\n      NotificationManager.error(\"Email address is required\", null, 4000);\n      isValid = false;\n    } else if (!formData.email.includes(\"@\") || !formData.email.match(/^[a-zA-Z0-9.-_]+@[a-zA-Z0-9]+(\\.[a-zA-Z]{2,})?$/) || !formData.email.match(/\\.(com|in|org|edu\\.in|net|co\\.in)$/)) {\n      NotificationManager.error(\"Invalid email address\", null, 4000);\n      isValid = false;\n    }\n    if (!formData.message.trim()) {\n      NotificationManager.error(\"Message cannot be empty\", null, 4000);\n      isValid = false;\n    } else if (formData.message.length > 250) {\n      NotificationManager.error(\"Message cannot be more than 250 characters long\", null, 4000);\n      isValid = false;\n    } else {\n      const messageRegex = /^[a-zA-Z0-9.,'\"!&\\s@%#%^*(){}?+-/]*$/;\n      if (!messageRegex.test(formData.message)) {\n        NotificationManager.error(\"Message can only contain alphabets, numbers, and some special symbols\", null, 4000);\n        isValid = false;\n      }\n    }\n    return isValid;\n  };\n  const notify = () => {\n    const toastId = toast.loading(\"Sending message...\", {});\n    setTimeout(() => {\n      toast.update(toastId, {\n        render: \"Your message has been sent successfully !\",\n        type: \"success\",\n        isLoading: false,\n        autoClose: 4000,\n        closeOnClick: false,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n        closeButton: true\n      });\n    }, 2500);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      notify();\n      console.log(\"Name: \", formData.name);\n      console.log(\"Phone: \", formData.phone);\n      console.log(\"Email: \", formData.email);\n      console.log(\"Message: \", formData.message);\n      setFormData({\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        message: \"\"\n      });\n    }\n  };\n  const [disabled, setDisabled] = useState(false); // State to manage button disabled state\n  const [countdown, setCountdown] = useState(10); // State to manage countdown timer\n\n  const handleClick = () => {\n    // Disable the button and start the countdown\n    setDisabled(true);\n    let timer = countdown;\n    const countdownInterval = setInterval(() => {\n      timer -= 1;\n      setCountdown(timer);\n      if (timer <= 0) {\n        clearInterval(countdownInterval); // Clear the interval when countdown reaches 0\n        setDisabled(false); // Enable the button\n        setCountdown(10); // Reset the countdown\n      }\n    }, 1000); // Countdown every second\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    id: \"Contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          placeholder: \"\",\n          pattern: \"[A-Za-z\\\\s]*\",\n          onInput: e => {\n            e.target.value = e.target.value.replace(/[^A-Za-z\\s]/g, \"\");\n          },\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          value: formData.phone,\n          onChange: handleChange,\n          placeholder: \" \",\n          maxLength: \"10\",\n          pattern: \"[0-9]*\",\n          onInput: e => e.target.value = e.target.value.replace(/\\D/g, \"\"),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \" \",\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"message\",\n          value: formData.message,\n          onChange: handleChange,\n          placeholder: \" \",\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        style: {\n          marginTop: \"10px\"\n        },\n        onClickCapture: handleClick,\n        disabled: disabled,\n        children: disabled ? `${countdown}s` : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"pXB3LLDGpNP2kgH2DPTH4EcU1B0=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","NotificationManager","toast","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","name","phone","email","message","handleChange","e","value","target","toLowerCase","replace","char","toUpperCase","validate","isValid","trim","error","length","phoneRegex","test","includes","match","messageRegex","notify","toastId","loading","setTimeout","update","render","type","isLoading","autoClose","closeOnClick","pauseOnHover","draggable","progress","undefined","closeButton","handleSubmit","preventDefault","console","log","disabled","setDisabled","countdown","setCountdown","handleClick","timer","countdownInterval","setInterval","clearInterval","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","pattern","onInput","style","width","maxLength","marginTop","onClickCapture","_c","$RefreshReg$"],"sources":["C:/Users/MyPc/Desktop/Portfolio new/portfolio/src/Components/contact.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./contact.css\"\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: name === \"name\"\r\n        ? value\r\n          .toLowerCase()\r\n          .replace(/\\b\\w/g, (char) => char.toUpperCase())\r\n        : name === \"email\"\r\n          ? value\r\n            .toLowerCase()\r\n          : name === \"message\"\r\n            ? value\r\n              .toLowerCase()\r\n              .replace(/(^\\s*\\w|[.!?]\\s*\\w)/g, (char) => char.toUpperCase())\r\n            : value\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n\r\n    if (!formData.name.trim()) {\r\n      NotificationManager.error(\"Name is required\", null, 4000);\r\n      isValid = false;\r\n    } else if (formData.name.trim().length < 3) {\r\n      NotificationManager.error(\"Name must be at least 3 characters long\", null, 4000);\r\n      isValid = false;\r\n    }\r\n\r\n    const phoneRegex = /^(?!(\\d)\\1{9})[6-9]\\d{9}$/;\r\n    if (!formData.phone.trim()) {\r\n      NotificationManager.error(\"Phone number is required\", null, 4000);\r\n      isValid = false;\r\n    } else if (!phoneRegex.test(formData.phone)) {\r\n      NotificationManager.error(\"Invalid phone number\", null, 4000);\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      NotificationManager.error(\"Email address is required\", null, 4000);\r\n      isValid = false;\r\n    } else if (\r\n      !formData.email.includes(\"@\") ||\r\n      !formData.email.match(/^[a-zA-Z0-9.-_]+@[a-zA-Z0-9]+(\\.[a-zA-Z]{2,})?$/) ||\r\n      !formData.email.match(/\\.(com|in|org|edu\\.in|net|co\\.in)$/)\r\n    ) {\r\n      NotificationManager.error(\"Invalid email address\", null, 4000);\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.message.trim()) {\r\n      NotificationManager.error(\"Message cannot be empty\", null, 4000);\r\n      isValid = false;\r\n    } else if (formData.message.length > 250) {\r\n      NotificationManager.error(\"Message cannot be more than 250 characters long\", null, 4000);\r\n      isValid = false;\r\n    }\r\n    else {\r\n      const messageRegex = /^[a-zA-Z0-9.,'\"!&\\s@%#%^*(){}?+-/]*$/;\r\n      if (!messageRegex.test(formData.message)) {\r\n        NotificationManager.error(\"Message can only contain alphabets, numbers, and some special symbols\", null, 4000);\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const notify = () => {\r\n    const toastId = toast.loading(\"Sending message...\", {\r\n    });\r\n\r\n    setTimeout(() => {\r\n      toast.update(toastId, {\r\n        render: \"Your message has been sent successfully !\",\r\n        type: \"success\",\r\n        isLoading: false,\r\n        autoClose: 4000,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n        closeButton: true,\r\n      });\r\n    }, 2500);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      notify();\r\n      console.log (\"Name: \", formData.name);\r\n      console.log (\"Phone: \", formData.phone);\r\n      console.log (\"Email: \" , formData.email);\r\n      console.log (\"Message: \", formData.message);\r\n      setFormData({\r\n        name: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        message: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const [disabled, setDisabled] = useState(false); // State to manage button disabled state\r\n  const [countdown, setCountdown] = useState(10); // State to manage countdown timer\r\n\r\n  const handleClick = () => {\r\n    // Disable the button and start the countdown\r\n    setDisabled(true);\r\n    let timer = countdown;\r\n\r\n    const countdownInterval = setInterval(() => {\r\n      timer -= 1;\r\n      setCountdown(timer);\r\n      \r\n      if (timer <= 0) {\r\n        clearInterval(countdownInterval); // Clear the interval when countdown reaches 0\r\n        setDisabled(false); // Enable the button\r\n        setCountdown(10); // Reset the countdown\r\n      }\r\n    }, 1000); // Countdown every second\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact\" id=\"Contact\">\r\n      <h2 >Contact me</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} placeholder=\"\" pattern=\"[A-Za-z\\s]*\" onInput={(e) => { e.target.value = e.target.value.replace(/[^A-Za-z\\s]/g, \"\"); }} style={{ width: \"100%\" }} />\r\n          <label>Name</label>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input type=\"text\" name=\"phone\" value={formData.phone} onChange={handleChange} placeholder=\" \" maxLength=\"10\" pattern=\"[0-9]*\" onInput={(e) => e.target.value = e.target.value.replace(/\\D/g, \"\")} style={{ width: \"100%\" }} />\r\n          <label>Phone Number</label>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input type=\"text\" name=\"email\" value={formData.email} onChange={handleChange} placeholder=\" \" style={{ width: \"100%\" }} />\r\n          <label>Email Address</label>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <textarea type=\"text\" name=\"message\" value={formData.message} onChange={handleChange} placeholder=\" \" style={{ width: \"100%\" }} />\r\n          <label>Your Message</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit\" style={{ marginTop: \"10px\" }} onClickCapture={handleClick} disabled={disabled}>{disabled ? `${countdown}s` : 'Send'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}